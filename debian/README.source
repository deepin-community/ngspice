Remarks about the source of ngspice in relation of the DFSG
-----------------------------------------------------------

NGSpice before version 28 has used some licenses that are not considered as
compatible with the DFSG (Debian Free Software Guidelines [1][2]). Especially
the used SPICEDOC, CIDERLICENSE and the Educational Community License version
1.0 aren't redistributable within Debian main.

Most parts of the NGSpice release 27 has solved such issues as upstream has
done a re-licensing of source code parts to the New BSD license.
Nevertheless some parts of ngspice wasn't DFSG clean and lacking license
information.. By asking upstream which parts are not re-licensed (until
version 27) to the New BSD license it turned out that the following parts of
the source code are left:

 ./doc
 ./src/ciderlib
 ./src/spicelib/devices/adms

The conversion about clearing the licensing situation for NGSpice 27 can be
found here:

 https://sourceforge.net/p/ngspice/mailman/ngspice-users/thread/d6ec1d21-3e4e-854f-7f87-57dc34a1841e%40t-online.de/#msg36135651

By releasing version 28 of NGSpice the above mentioned source code parts had
been re-licensed to the New BSD license or even dropped from the source.
This means the source of NGSpice starting with version 28 is DFSG compatible.

We need to filter out some folders/files due no relevance for Debian while
importing source code tarballs.

 ./visualc
 ./visualc-shared
 ./doc/manual.pdf


If you found any issue related to used licenses in NGSpice please don't
hesitate to get in contact with the packaging/maintaining team. Please contact
the team by sending a email to <pkg-electronics-deve@alioth-lists.debian.org>.

[1] https://www.debian.org/social_contract#guidelines
[2] https://wiki.debian.org/DFSGLicenses

Source code management within Debian
------------------------------------

This package is maintained with git-buildpackage(1). It follows DEP-14
for branch naming (e.g. using debian/sid for the current version
in Debian unstable).

It uses pristine-tar(1) to store enough information in git to generate
bit identical tarballs when building the package without having
downloaded an upstream tarball first.

When working with patches it is recommended to use "gbp pq import" to
import the patches, modify the source and then use "gbp pq export
--commit" to commit the modifications.

The changelog is generated using "gbp dch" so if you submit any 
changes don't bother to add changelog entries but rather provide
a nice git commit message that can then end up in the changelog.

It is recommended to build the package with pbuilder using:

    gbp buildpackage --git-pbuilder

For information on how to set up a pbuilder environment see the 
git-pbuilder(1) manpage. In short:

    DIST=sid git-pbuilder create
    gbp clone https://salsa.debian.org/electronics-team/ngspice.git
    cd ngspice
    gbp buildpackage --git-pbuilder

 -- Carsten Schoenert <c.schoenert@t-online.de>  Sat, 14 Jun 2019 19:51:07 +0200
